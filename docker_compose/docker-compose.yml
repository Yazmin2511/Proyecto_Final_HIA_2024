services:

#
# BASE DE DATOS
#
  database:
    restart: unless-stopped
    networks:
      my_network:
        ipv4_address: 172.20.0.2
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_DATABASE: mydatabase
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
#
# MONGO EXPRESS
# Default user:password ==> admin:pass

  database_client:
    restart: unless-stopped
    networks:
      my_network:
        ipv4_address: 172.20.0.3
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:secret@database:27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret
    depends_on:
      - database


#
# BACKEND
#
  backend:
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    networks:
      my_network:
        ipv4_address: 172.20.0.4
    environment:
      PORT: 3000
      MONGO_URI: mongodb://root:secret@database:27017
      SECRET_JWT_SEED: secret
    ports:
      - "8000:3000"
    depends_on:
      - database
#
# frontend
#
  frontend:
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    networks:
      my_network:
        ipv4_address: 172.20.0.5
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - backend

#
# data_restorer
#
  data_restorer: 
    image: mongo:7  
    networks: 
      my_network: 
        ipv4_address: 172.20.0.6
    volumes: 
      - ./dump:/dump 
    depends_on: 
      - database 
    entrypoint: ["/bin/sh", "-c", "mongorestore --uri mongodb://root:secret@database:27017 --dir /dump"]

  #
  # PROMETHEUS
  #
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped

  #
  # GRAFANA
  #
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped


networks:
  my_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mongo-data:
    driver: local
  prometheus-data:
  grafana-data:
